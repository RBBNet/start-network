# Favor não editar diretamente o arquivo docker-swarm.yml, pois ele é gerado automaticamente a partir do docker-swarm.yml.hbs
version: '3.4'

x-defaults:

  logging: &logging-default
    options:
      max-size: '10m'
      max-file: '5'
    driver: json-file

  localization: &localization-default
    TZ: America/Sao_Paulo
    LANG: en_US.UTF-8

services:

{{#each nodes}}
  {{name}}:
    image: ${IMAGE_BESU}
    logging: *logging-default
    environment:
      << : *localization-default
      LOG4J_CONFIGURATION_FILE: "/var/lib/besu/log.xml"
      BESU_DATA_PATH: "/var/lib/besu"
      BESU_GENESIS_FILE: "/var/lib/besu/genesis.json"
      BESU_STATIC_NODES_FILE: "/var/lib/besu/static-nodes.json"
      BESU_DISCOVERY_ENABLED: "true"
      BESU_RPC_HTTP_ENABLED: "true"
      BESU_RPC_HTTP_API: "ADMIN,ETH,TXPOOL,NET,IBFT,WEB3,DEBUG,TRACE"
      BESU_RPC_HTTP_CORS_ORIGINS: "*"
      BESU_HOST_ALLOWLIST: "*"
      {{#if ../metrics.push}}
      BESU_METRICS_PUSH_ENABLED: "true"
      BESU_METRICS_PUSH_HOST: "{{../metrics.push.host}}"
      BESU_METRICS_PUSH_PORT: "{{../metrics.push.port}}"
      BESU_METRICS_PUSH_PROMETHEUS_JOB: "{{../organization}}-{{name}}"
      {{else}}
      BESU_METRICS_ENABLED: "true"
      BESU_METRICS_HOST: "0.0.0.0"
      {{/if}}
    {{#if ../environment.isDockerSwarm}}
    configs:
    - source: log-config
      target: /var/lib/besu/log.xml
    - source: genesis-config
      target: /var/lib/besu/genesis.json
    - source: node-{{name}}-privkey-config
      target: /var/lib/besu/key
    - source: static-nodes-config
      target: /var/lib/besu/static-nodes.json
    {{/if}}
    command: >-
      --Xdns-enabled=true
      --Xdns-update-enabled=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.{{name}}-jsonrpc.rule=PathPrefix(`/nodes/{{name}}`)"
      - "traefik.http.routers.{{name}}-jsonrpc.entryPoints=web"
      - "traefik.http.routers.{{name}}-jsonrpc.middlewares={{name}}-stripPrefix@docker"
      - "traefik.http.routers.{{name}}-jsonrpc.service={{name}}-jsonrpc"
      - "traefik.http.middlewares.{{name}}-stripPrefix.stripPrefix.prefixes=/nodes/{{name}}"
      - "traefik.http.services.{{name}}-jsonrpc.loadbalancer.server.port=8545"
      - "traefik.http.services.{{name}}-jsonrpc-ws.loadbalancer.server.port=8546"
      - "traefik.http.services.{{name}}-metrics.loadbalancer.server.port=9545"
    volumes:
      - ${VOLUMES_ROOT}/{{name}}/:/var/lib/besu/
      {{#unless ../environment.isDockerSwarm}}
      - ${CONFIG_ROOT}/nodes/{{name}}/key:/var/lib/besu/key
      - ${CONFIG_ROOT}/genesis.json:/var/lib/besu/genesis.json
      - ${CONFIG_ROOT}/static-nodes.json:/var/lib/besu/static-nodes.json
      - ${CONFIG_ROOT}/log.xml:/var/lib/besu/log.xml
      {{/unless}}
    {{#if ports}}
    ports:
      {{#each ports}}
      - {{.}}
      {{/each}}
    {{/if}}

{{/each}}

{{#if traefik}}
  traefik:
    image: ${IMAGE_TRAEFIK}
    logging: *logging-default
    environment:
      << : *localization-default
    {{#if environment.isDockerSwarm}}
    deploy:
      placement:
        constraints:
          - node.role == manager
    {{/if}}
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      {{#if environment.isDockerSwarm}}
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.constraints=Label(`com.docker.stack.namespace`,`${STACK_NAME}`)"
      {{/if}}
      - "--providers.docker.exposedByDefault=false"
      - "--entryPoints.web.address=:80"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addRoutersLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--log.level=DEBUG"
    ports:
      - "${APP_WEB_PORT}:80"
      - "${APP_TRAEFIK_PORT}:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
{{/if}}

{{#if prometheus}}
  prometheus:
    image: ${IMAGE_PROMETHEUS}
    logging: *logging-default
    environment:
      << : *localization-default
    {{#if environment.isDockerSwarm}}
    configs:
      - source: prometheus-config
        target: /etc/prometheus/prometheus.yml
      - source: prometheus-rules-blockchain-config
        target: /etc/prometheus/rules-blockchain.yml
      - source: prometheus-rules-rbb-config
        target: /etc/prometheus/rules-rbb.yml
      - source: prometheus-rules-rbb-lab-config
        target: /etc/prometheus/rules-rbb-lab.yml
    {{/if}}
    command: >-
        --config.file=/etc/prometheus/prometheus.yml
        --storage.tsdb.path=/prometheus
        --storage.tsdb.allow-overlapping-blocks
        --web.console.libraries=/usr/share/prometheus/console_libraries
        --web.console.templates=/usr/share/prometheus/consoles
        --web.route-prefix=/prometheus
        --web.external-url=/prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=PathPrefix(`/prometheus`)"
      - "traefik.http.routers.prometheus.entryPoints=web"
      - "traefik.http.routers.prometheus.service=prometheus-web"
      - "traefik.http.services.prometheus-web.loadbalancer.server.port=9090"
    volumes:
      - ${VOLUMES_ROOT}/prometheus/:/prometheus/
      {{#unless environment.isDockerSwarm}}
      - ${CONFIG_ROOT}/prometheus.yml:/etc/prometheus/prometheus.yml
      - ${CONFIG_ROOT}/prometheus-rules-blockchain.yml:/etc/prometheus/rules-blockchain.yml
      - ${CONFIG_ROOT}/prometheus-rules-rbb.yml:/etc/prometheus/rules-rbb.yml
      - ${CONFIG_ROOT}/prometheus-rules-rbb-lab.yml:/etc/prometheus/rules-rbb-lab.yml
      {{/unless}}
{{/if}}

{{#if environment.isDockerSwarm}}
configs:
  genesis-config:
      file: ${CONFIG_ROOT}/genesis.json
  static-nodes-config:
      file: ${CONFIG_ROOT}/static-nodes.json
  log-config:
      file: ${CONFIG_ROOT}/log.xml
  {{#each nodes}}
  node-{{name}}-privkey-config:
    file: ${CONFIG_ROOT}/nodes/{{name}}/key
  {{/each}}
  {{#if prometheus}}
  prometheus-config:
      file: ${CONFIG_ROOT}/prometheus.yml
  prometheus-rules-blockchain-config:
      file: ${CONFIG_ROOT}/prometheus-rules-blockchain.yml
  prometheus-rules-rbb-config:
      file: ${CONFIG_ROOT}/prometheus-rules-rbb.yml
  prometheus-rules-rbb-lab-config:
      file: ${CONFIG_ROOT}/prometheus-rules-rbb-lab.yml
  {{/if}}
{{/if}}
