#!/usr/bin/env bash

function is_dsv() {
	ip route get 10 | grep -qF 'src 10.3.'
}

if [[ ! -d ".dtoolx" ]]; then
	is_dsv || export http_proxy=socks5://127.0.0.1:3128 https_proxy=socks5://127.0.0.1:3128

	curl -s swarm.dsv.bndes.net/dtoolx-init | bash
fi


source .dtoolx/scripts/common.sh


set -e


BOOT_NODES=( ${BOOT_NODES:-$(seq -f "${BOOT_PREFIX:-boot}%.0f" ${BOOT_COUNT:-2})} )
VALIDATOR_NODES=( ${VALIDATOR_NODES:-$(seq -f "${VALIDATOR_PREFIX:-validator}%.0f" ${VALIDATOR_COUNT:-4})} )
WRITER_NODES=( ${WRITER_NODES:-$(seq -f "${WRITER_PREFIX:-writer}%.0f" ${WRITER_COUNT:-2})} )

ALL_NODES=( ${BOOT_NODES[@]} ${VALIDATOR_NODES[@]} ${WRITER_NODES[@]} )


CONFIG_ROOT="${PWD}/.env.configs"
CONFIG_INIT_ROOT="${CONFIG_ROOT}/init"


rm -rf "${CONFIG_INIT_ROOT}" "${VOLUMES_ROOT}"/*

mkdir -p "${CONFIG_INIT_ROOT}"
chown 1000.1000 "${CONFIG_INIT_ROOT}"

for NODE_NAME in ${ALL_NODES[@]}; do
	NODE_PATH="${VOLUMES_ROOT}/${NODE_NAME}"

	mkdir -p "${NODE_PATH}"
	chown 1000.1000 "${NODE_PATH}"
done


BOOT_ENODES=()
for NODE_NAME in ${BOOT_NODES[@]}; do
        NODE_INIT_PATH="${CONFIG_INIT_ROOT}/keys-bootnodes/${NODE_NAME}"
	mkdir -p "${NODE_INIT_PATH}"
	chown 1000.1000 "${NODE_INIT_PATH}"

	env CONFIG_INIT_ROOT="${CONFIG_INIT_ROOT}" NODE_NAME="${NODE_NAME}" \
		docker-compose -f docker-compose.init.yml run --rm init-bootnode
	chmod g=,o= "${NODE_INIT_PATH}/key"

        NODE_KEY_PATH="${NODE_INIT_PATH}/key"
        NODE_PUBKEY_PATH="${NODE_INIT_PATH}/key.pub"
        NODE_PUBKEY=$(cut -c3- "${NODE_PUBKEY_PATH}")
        ENODE=$(printf 'enode://%s@%s:30303' ${NODE_PUBKEY} ${NODE_NAME})
        BOOT_ENODES+=(${ENODE})

        NODE_PATH="${VOLUMES_ROOT}/${NODE_NAME}"
        mv -T "${NODE_INIT_PATH}" "${NODE_PATH}"
done

BOOT_NODES=$(printf '[%s]' "$(printf '"%s"' ${BOOT_ENODES[@]} | sed 's#""#","#g')")

rm -rf "${CONFIG_INIT_ROOT}/keys-bootnodes"


cat "${CONFIG_ROOT}/genesis-config.json" \
	| ~accer/usr/local/bin/jq ".blockchain.nodes.count = ${#VALIDATOR_NODES[@]}" \
	| ~accer/usr/local/bin/jq ".genesis.config.discovery.bootnodes += ${BOOT_NODES}" \
	| ~accer/usr/local/bin/jq ".genesis.timestamp = \"$(printf '0x%X' $(date +%s))\"" > "${CONFIG_INIT_ROOT}/genesis-config.json"


env CONFIG_INIT_ROOT="${CONFIG_INIT_ROOT}" NODE_NAME='none' \
	docker-compose -f docker-compose.init.yml run --rm init-genesis-and-validators
chmod g=,o= "${CONFIG_INIT_ROOT}"/generate-blockchain/keys/*/key
mv "${CONFIG_INIT_ROOT}/generate-blockchain/genesis.json" "${CONFIG_ROOT}/genesis.json"
~accer/usr/local/bin/jq < "${CONFIG_ROOT}/genesis.json"


VALIDATOR_ENODES=()
VALIDATOR_INDEX=0
for NODE_INIT_PATH in "${CONFIG_INIT_ROOT}"/generate-blockchain/keys/*; do
	NODE_NAME="${VALIDATOR_NODES[$VALIDATOR_INDEX]}"

        NODE_KEY_PATH="${NODE_INIT_PATH}/key"
        NODE_PUBKEY_PATH="${NODE_INIT_PATH}/key.pub"
	NODE_PUBKEY=$(cut -c3- "${NODE_PUBKEY_PATH}")
	ENODE=$(printf 'enode://%s@%s:30303' ${NODE_PUBKEY} ${NODE_NAME})
	VALIDATOR_ENODES+=(${ENODE})

        NODE_PATH="${VOLUMES_ROOT}/${NODE_NAME}"
        mv -T "${NODE_INIT_PATH}" "${NODE_PATH}"

	VALIDATOR_INDEX=$((VALIDATOR_INDEX+1))
done

rm -rf "${CONFIG_INIT_ROOT}/generate-blockchain/"


STATIC_NODES_PATH="${CONFIG_ROOT}/static-nodes.json"
STATIC_NODES=$(printf '[%s]' "$(printf '"%s"' ${VALIDATOR_ENODES[@]} | sed 's#""#","#g')")
echo "${STATIC_NODES}" > "${STATIC_NODES_PATH}"
